%option main
digit [0-9]
letter [A-Za-z_]
number {digit}
sign [+-]
identifier ({letter}({letter}|{digit})*)  
builtin_func ("take_off"|"land"|"flip_left"|"flip_right"|"flip_front"|"flip_back"|"go"|"go_up"|"go_down"|"go_forward"|"go_backward"|"go_left"|"go_right"|"rotate_c"|"rotate_cc"|"video_on"|"video_off"|"take_pic"|"emergency_stop"|"set_speed"|"set_wifi"|"hover"|"get_speed"|"get_altitude"|"get_temperature"|"get_acceleration"|"get_inclination"|"get_time"|"get_battery"|"connect")
%%
{digit}+ return(NUMBER);
var return(VARIABLE);
if return(IF);
else return(ELSE);
[(] return(LP);
[)] return(RP);
[{] return(LB);
[}] return(RB);
[;] return(SEMICLN);
"//".* return(SINGLE_LINE_COMMENT);                           
[/][*][^*]*[*]+([^*/][^*]*[*]+)*[/] return(MULTILINE_COMMENT);
[=] return(ASGNMNT_OP);                                       
[.] return(DOT);
[\"] return(STRING_IDNT);
[\'] return(CHAR_IDNT);
"||" return(OR_OP);
"&&" return(AND_OP);
[!] return(NOT_OP);
"==" return(EQUAL_OP);
"!=" return(NOT_EQUAL_OP);
[<] return(LESS_T_OP);
[>] return(GREATER_T_OP);
"<=" return(LT_OR_EQUAL_OP);
">=" return(GT_OR_EQUAL_OP);
[*] return(MUL_OP);
[/] return(DIV_OP);
[+] return(ADD_OP);
[-] return(SUB_OP);
[%] return(MOD_OP);
[,] return(COMMA);
">>" return(IN_OP);
"<<" return(OUT_OP);
[ ] ;
input return(INPUT_CALL);
print return(OUTPUT_CALL);
while return(WHILE_LOOP);
for return(FOR_LOOP);
function return(FUNCTION);
{builtin_func} return(BUILTIN_FUNC);
{identifier} return(IDENTIFIER);
%%