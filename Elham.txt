=============== Function Declaration and Function Call ===============

<function_definition> ::= <function_header> <function_body>
<function_header>     ::= <return_type> <function_signature>
<return_type>         ::= void 
                        | <type>               
<function_signature>  ::= <identifier> (<parameter_list>?)    
<parameter_list>      ::= <parameter> 
                        | <parameter_list>, <parameter>     
<parameter>           ::= <type> <variable_id>
<variable_id>         ::= <identifier> 
                        | <variable_id> []                           
<function_body>       ::= <block> | ;
<block>               ::= { <block_statments>? }    //TODO: DEFINE <block_statments>
<function_call>       ::= <function_name> ( <argument_list>? )
<function_name>       ::= <identifier>
<identifier>          ::= <alphabet> 
                        | <identifier> <number>
                        | <identifier> <alphabet>

============== Input and Output Statement ==================                        
<input_statement>     ::= input(<word>+ | <variable>) | input(<variable>)
<output_statement>    ::= print()


============== Alphabet and Digits =================
<alphabet>            ::= a | b | c | d | e | f | g | h | i | j | k | l | m | n | o | p | q |
                          r | s | t | u | v | w | x | y | z | A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q | R | S | T | U | V | W | X | Y | Z
<number>              ::= <digits>                            
<digits>              ::= <digit> 
                        | <digits> <digit>
<digit>               ::= 0 | <non_zero_digit>
<non_zero_digit>      ::= 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9      
<alphanumeric>        ::= <alphabet> <alphanumeric> 
                        | <digit> <alphanumeric>
<word>                ::= {<digit>|<alphabet>}                                              
                        | <word> {<digit>|<alphabet>}                        

=================== Types ===================

<type>                ::= <primitive_type> 
                        | <reference_type>                    
<primitive_type>      ::= char
                        | short
                        | int
                        | long
                        | float
                        | double 
                        | bool    
<reference_type>      ::= <class_name>
                        | <array_type>
<class_name>          ::= <identifier>                               
<array_type>          ::= <type> []                        


============= Comments ==============
<line_comment>        ::= //word
                      ::= //<line_comment> <word>
<block_comment>       ::= /* word */
                      ::= /* <block_comment> <word> */                      



