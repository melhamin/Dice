%option main
digit [0-9]
sign [+-]
%%
var printf("VARIABLE");
if printf("IF");
[(] printf("LP");
[)] printf("RP");
[;] printf("SEMICLN");
[//] printf("LINE_CMMNT");
[/*] printf("BLCK_CMMNT_STRT");
[*/] printf("BLCK_CMMNT_END");
[=] printf("ASGNMNT_OP");
[.] printf("DOT");
[\"] printf("STRING_IDNT");
[\'] printf("CHAR_IDNT");
[||] printf("OR_OP");
[&&] printf("AND_OP");
[!] printf("NOT_OP");
[==] printf("EQUAL_OP");
[!=] printf("NOT_EQUAL_OP");
[<] printf("LESS_T_OP");
[>] printf("GREATER_T_OP");
[<=] printf("LT_OR_EQUAL_OP");
[>=] printf("GT_OR_EQUAL_OP");
[*] printf("MUL_OP");
[/] printf("DIV_OP");
[+] printf("ADD_OP");
[-] printf("SUB_OP");
[%] printf("MOD_OP");
[,] printf("COMMA");
[-] printf(" ");
input printf("INPUT_CALL");
print printf("OUTPUT_CALL");
while printf("WHILE_LOOP");
for printf("FOR_LOOP");
takeoff() printf("TAKEOFF_FNCTION");
land() printf("LAND_FNCTION");
flip_left() printf("FLIP_LFT_FNCTION);
flip_right() printf("FLIP_RIGHT_FNCTION);
flip_back() printf("FLIP_BACK_FNCTION);
flip_front() printf("FLIP_FRONT_FNCTION);
go() printf("GO_FNCTION");
go_up() printf("GO_UP_FNCTION");
go_down() printf("GO_DOWN_FNCTION");
go_forward() printf("GO_FRWRD_FNCTION");
go_backward() printf("GO_BCKWRD_FNCTION");
go_left() printf("GO_LEFT_FNCTION");
go_right() printf("GO_RIGHT_FNCTION");